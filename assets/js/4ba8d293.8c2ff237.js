"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[37],{6210:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>d});var t=o(5893),a=o(1151),s=o(4866),r=o(5162);const c={title:"@Scope",id:"scope"},l=void 0,i={id:"base-concepts/scope",title:"@Scope",description:"The Scope of Bean is a way to define when Bean will be created and how it is managed by container.",source:"@site/docs/04-base-concepts/09-scope.mdx",sourceDirName:"04-base-concepts",slug:"/base-concepts/scope",permalink:"/docs/base-concepts/scope",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{title:"@Scope",id:"scope"},sidebar:"tutorialSidebar",previous:{title:"@Qualifier",permalink:"/docs/base-concepts/qualifier"},next:{title:"@Lazy",permalink:"/docs/base-concepts/lazy"}},u={},d=[{value:"Singleton scope <em>(default)</em>",id:"singleton-scope-default",level:2},{value:"Prototype scope",id:"prototype-scope",level:2},{value:"Scope on CatContext class",id:"scope-on-catcontext-class",level:2},{value:"Scope on Beans",id:"scope-on-beans",level:2},{value:"Combining @Scope on CatContext and Bean",id:"combining-scope-on-catcontext-and-bean",level:2}];function p(e){const n={a:"a",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"The Scope of Bean is a way to define when Bean will be created and how it is managed by container."}),"\n",(0,t.jsxs)(n.p,{children:["Clawject provides ",(0,t.jsx)(n.code,{children:"@Scope"})," decorator to define a scope and have 2 built-in scopes:\n",(0,t.jsx)(n.code,{children:"singleton"})," and ",(0,t.jsx)(n.code,{children:"prototype"}),", default value is ",(0,t.jsx)(n.code,{children:"singleton"}),"."]}),"\n",(0,t.jsxs)(n.h2,{id:"singleton-scope-default",children:["Singleton scope ",(0,t.jsx)(n.em,{children:"(default)"})]}),"\n",(0,t.jsx)(n.p,{children:"When we define a bean with the singleton scope, the container creates a single instance of that bean,\nall requests for that bean will return the same object, which is cached.\nAny modifications to the object will be reflected in all references to the bean.\nThis scope is the default value if no other scope is specified."}),"\n",(0,t.jsx)(n.p,{children:"Let's use the singleton scope in the following example:"}),"\n",(0,t.jsxs)(s.Z,{children:[(0,t.jsx)(r.Z,{value:"implicit-scope",label:"Declare a Bean with default singleton scope",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'class Foo {\n  name = \'foo\';\n}\n\nclass Bar {\n  constructor(public foo: Foo) {}\n\n  setName(): void {\n    this.foo.name = \'bar\';\n  }\n}\n\nclass Baz {\n  constructor(public foo: Foo) {}\n}\n\nclass MyContext extends CatContext {\n  foo = Bean(Foo);\n\n  bar = Bean(Bar);\n  baz = Bean(Baz);\n\n  @PostConstruct\n  postConstruct(\n    bar: Bar,\n    baz: Baz,\n  ) {\n    bar.setName();\n\n    console.log(bar.foo === baz.foo); // <- prints "true"\n\n    console.log(bar.foo.property); // <- prints "bar"\n    console.log(baz.foo.property); // <- prints "bar"\n  }\n}\n'})})}),(0,t.jsx)(r.Z,{value:"explicit-scope",label:"Declare Scope of Bean using decorator",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'class Foo {\n  name = \'foo\';\n}\n\nclass Bar {\n  constructor(public foo: Foo) {}\n\n  setName(): void {\n    this.foo.name = \'bar\';\n  }\n}\n\nclass Baz {\n  constructor(public foo: Foo) {}\n}\n\nclass MyContext extends CatContext {\n  @Scope("singleton")\n  foo = Bean(Foo);\n\n  bar = Bean(Bar);\n  baz = Bean(Baz);\n\n  @PostConstruct\n  postConstruct(\n    bar: Bar,\n    baz: Baz,\n  ) {\n    bar.setName();\n\n    console.log(bar.foo === baz.foo); // <- prints "true"\n\n    console.log(bar.foo.property); // <- prints "bar"\n    console.log(baz.foo.property); // <- prints "bar"\n  }\n}\n'})})})]}),"\n",(0,t.jsx)(n.h2,{id:"prototype-scope",children:"Prototype scope"}),"\n",(0,t.jsx)(n.p,{children:"A Bean with the prototype scope will return a different instance every time it is requested from the container."}),"\n",(0,t.jsx)(n.p,{children:"Let's use the prototype scope in the following example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'class Foo {\n  name = \'foo\';\n}\n\nclass Bar {\n  constructor(public foo: Foo) {}\n\n  setName(): void {\n    this.foo.name = \'bar\';\n  }\n}\n\nclass Baz {\n  constructor(public foo: Foo) {}\n}\n\nclass MyContext extends CatContext {\n  @Scope("prototype")\n  foo = Bean(Foo);\n\n  bar = Bean(Bar);\n  baz = Bean(Baz);\n\n  @PostConstruct\n  postConstruct(\n    bar: Bar,\n    baz: Baz,\n  ) {\n    bar.setName();\n\n    console.log(bar.foo === baz.foo); // <- prints "false"\n\n    console.log(bar.foo.property); // <- prints "bar"\n    console.log(baz.foo.property); // <- prints "foo"\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"As you can see - Scopes is a basic concept, but it is very important to understand it."}),"\n",(0,t.jsxs)(n.p,{children:["If you want to define your own scope, for example ",(0,t.jsx)(n.code,{children:"HTTPRequestScope"})," - you can check out the ",(0,t.jsx)(n.a,{href:"/docs/advanced-concepts/custom-scopes",children:"Custom Scopes"})," section."]}),"\n",(0,t.jsx)(n.h2,{id:"scope-on-catcontext-class",children:"Scope on CatContext class"}),"\n",(0,t.jsxs)(n.p,{children:["When we put @Scope decorator over the class that is inheritor of ",(0,t.jsx)(n.code,{children:"CatContext"}),",\nit indicates that all the beans that are declared in context should have scope that is defined in decorator."]}),"\n",(0,t.jsx)(n.p,{children:"Let's have a look here:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"class Foo {\n  constructor() {\n    console.log('Foo has been created');\n  }\n}\n\n@Scope('prototype')\nclass MyContext extends CatContext {\n  foo = Bean(Foo);\n\n  @PostConstruct\n  postConstruct(\n    foo1: Foo, // <- logs \"Foo has been created\"\n    foo2: Foo, // <- logs \"Foo has been created\",\n  ) {}\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["As we see, ",(0,t.jsx)(n.code,{children:"foo"})," bean will be created twice,\nbecause it's requested 2 times and it inherits prototype scope from context."]}),"\n",(0,t.jsx)(n.h2,{id:"scope-on-beans",children:"Scope on Beans"}),"\n",(0,t.jsx)(n.p,{children:"We can also put @Scope decorator over the bean declaration."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"class Foo {\n  @PostConstruct\n  postConstruct() {\n    console.log('Foo bean has been created');\n  }\n}\n\nclass MyContext extends CatContext {\n  @Scope('prototype') foo = Bean(Foo);\n\n  @PostConstruct\n  postConstruct(\n    foo1: Foo, // <- logs \"Foo bean has been created\"\n    foo2: Foo, // <- logs \"Foo bean has been created\",\n  ) {}\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["As you can see - we've defined scope on ",(0,t.jsx)(n.code,{children:"foo"})," bean, and foo was instantiated 2 times."]}),"\n",(0,t.jsx)(n.h2,{id:"combining-scope-on-catcontext-and-bean",children:"Combining @Scope on CatContext and Bean"}),"\n",(0,t.jsxs)(n.p,{children:["We can also combine @Scope decorator on CatContext and Bean.\nIf Bean is decorated with ",(0,t.jsx)(n.code,{children:"@Scope"}),", it overrides the ",(0,t.jsx)(n.code,{children:"@Scope"})," on ",(0,t.jsx)(n.code,{children:"CatContext"})," level for this bean,\nif not - value from ",(0,t.jsx)(n.code,{children:"CatContext"})," is used."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"class Foo {\n  @PostConstruct\n  postConstruct() {\n    console.log('Foo bean has been created');\n  }\n}\nclass Bar {\n  @PostConstruct\n  postConstruct() {\n    console.log('Bar bean has been created');\n  }\n}\n\n@Scope('prototype')\nclass MyContext extends CatContext {\n    foo = Bean(Foo);\n    @Scope('singleton') bar = Bean(Bar);\n\n    @PostConstruct\n    postConstruct(\n      foo1: Foo, // <- logs \"Foo bean has been created\"\n      foo2: Foo, // <- logs \"Foo bean has been created\",\n      bar1: Bar, // <- logs \"Bar bean has been created\"\n      bar2: Bar, // <- logs nothing, because Bar is a singleton\n    ) {}\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},5162:(e,n,o)=>{o.d(n,{Z:()=>r});o(7294);var t=o(6010);const a={tabItem:"tabItem_Ymn6"};var s=o(5893);function r(e){let{children:n,hidden:o,className:r}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.Z)(a.tabItem,r),hidden:o,children:n})}},4866:(e,n,o)=>{o.d(n,{Z:()=>y});var t=o(7294),a=o(6010),s=o(2466),r=o(6550),c=o(469),l=o(1980),i=o(7392),u=o(12);function d(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:o}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:o,attributes:t,default:a}}=e;return{value:n,label:o,attributes:t,default:a}}))}(o);return function(e){const n=(0,i.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,o])}function h(e){let{value:n,tabValues:o}=e;return o.some((e=>e.value===n))}function b(e){let{queryString:n=!1,groupId:o}=e;const a=(0,r.k6)(),s=function(e){let{queryString:n=!1,groupId:o}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!o)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return o??null}({queryString:n,groupId:o});return[(0,l._X)(s),(0,t.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(a.location.search);n.set(s,e),a.replace({...a.location,search:n.toString()})}),[s,a])]}function f(e){const{defaultValue:n,queryString:o=!1,groupId:a}=e,s=p(e),[r,l]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:o}=e;if(0===o.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:o}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${o.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=o.find((e=>e.default))??o[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:s}))),[i,d]=b({queryString:o,groupId:a}),[f,m]=function(e){let{groupId:n}=e;const o=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,s]=(0,u.Nk)(o);return[a,(0,t.useCallback)((e=>{o&&s.set(e)}),[o,s])]}({groupId:a}),x=(()=>{const e=i??f;return h({value:e,tabValues:s})?e:null})();(0,c.Z)((()=>{x&&l(x)}),[x]);return{selectedValue:r,selectValue:(0,t.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),m(e)}),[d,m,s]),tabValues:s}}var m=o(2389);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=o(5893);function v(e){let{className:n,block:o,selectedValue:t,selectValue:r,tabValues:c}=e;const l=[],{blockElementScrollPositionUntilNextRender:i}=(0,s.o5)(),u=e=>{const n=e.currentTarget,o=l.indexOf(n),a=c[o].value;a!==t&&(i(n),r(a))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const o=l.indexOf(e.currentTarget)+1;n=l[o]??l[0];break}case"ArrowLeft":{const o=l.indexOf(e.currentTarget)-1;n=l[o]??l[l.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":o},n),children:c.map((e=>{let{value:n,label:o,attributes:s}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>l.push(e),onKeyDown:d,onClick:u,...s,className:(0,a.Z)("tabs__item",x.tabItem,s?.className,{"tabs__item--active":t===n}),children:o??n},n)}))})}function C(e){let{lazy:n,children:o,selectedValue:a}=e;const s=(Array.isArray(o)?o:[o]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===a));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function j(e){const n=f(e);return(0,g.jsxs)("div",{className:(0,a.Z)("tabs-container",x.tabList),children:[(0,g.jsx)(v,{...e,...n}),(0,g.jsx)(C,{...e,...n})]})}function y(e){const n=(0,m.Z)();return(0,g.jsx)(j,{...e,children:d(e.children)},String(n))}},1151:(e,n,o)=>{o.d(n,{Z:()=>c,a:()=>r});var t=o(7294);const a={},s=t.createContext(a);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);