"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6666],{3632:(e,n,a)=>{a.d(n,{A:()=>s});a(6540);var t=a(4164);const o={tabItem:"tabItem_Ymn6"};var r=a(4848);function s(e){let{children:n,hidden:a,className:s}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,t.A)(o.tabItem,s),hidden:a,children:n})}},2707:(e,n,a)=>{a.d(n,{A:()=>w});var t=a(6540),o=a(4164),r=a(4319),s=a(6347),l=a(4280),i=a(3024),c=a(8417),u=a(4031);function d(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:a}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:a,attributes:t,default:o}}=e;return{value:n,label:a,attributes:t,default:o}}))}(a);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,a])}function h(e){let{value:n,tabValues:a}=e;return a.some((e=>e.value===n))}function b(e){let{queryString:n=!1,groupId:a}=e;const o=(0,s.W6)(),r=function(e){let{queryString:n=!1,groupId:a}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:n,groupId:a});return[(0,i.aZ)(r),(0,t.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(o.location.search);n.set(r,e),o.replace({...o.location,search:n.toString()})}),[r,o])]}function f(e){const{defaultValue:n,queryString:a=!1,groupId:o}=e,r=p(e),[s,i]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=a.find((e=>e.default))??a[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:r}))),[c,d]=b({queryString:a,groupId:o}),[f,m]=function(e){let{groupId:n}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(n),[o,r]=(0,u.Dv)(a);return[o,(0,t.useCallback)((e=>{a&&r.set(e)}),[a,r])]}({groupId:o}),x=(()=>{const e=c??f;return h({value:e,tabValues:r})?e:null})();(0,l.A)((()=>{x&&i(x)}),[x]);return{selectedValue:s,selectValue:(0,t.useCallback)((e=>{if(!h({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);i(e),d(e),m(e)}),[d,m,r]),tabValues:r}}var m=a(6916);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=a(4848);function g(e){let{className:n,block:a,selectedValue:t,selectValue:s,tabValues:l}=e;const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),u=e=>{const n=e.currentTarget,a=i.indexOf(n),o=l[a].value;o!==t&&(c(n),s(o))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const a=i.indexOf(e.currentTarget)+1;n=i[a]??i[0];break}case"ArrowLeft":{const a=i.indexOf(e.currentTarget)-1;n=i[a]??i[i.length-1];break}}n?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":a},n),children:l.map((e=>{let{value:n,label:a,attributes:r}=e;return(0,y.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>i.push(e),onKeyDown:d,onClick:u,...r,className:(0,o.A)("tabs__item",x.tabItem,r?.className,{"tabs__item--active":t===n}),children:a??n},n)}))})}function j(e){let{lazy:n,children:a,selectedValue:r}=e;const s=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===r));return e?(0,t.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function v(e){const n=f(e);return(0,y.jsxs)("div",{className:(0,o.A)("tabs-container",x.tabList),children:[(0,y.jsx)(g,{...n,...e}),(0,y.jsx)(j,{...n,...e})]})}function w(e){const n=(0,m.A)();return(0,y.jsx)(v,{...e,children:d(e.children)},String(n))}},4557:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"fundamentals/lazy","title":"@Lazy","description":"@Lazy","source":"@site/docs/fundamentals/lazy.mdx","sourceDirName":"fundamentals","slug":"/fundamentals/lazy","permalink":"/docs/fundamentals/lazy","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1730819800000,"frontMatter":{"title":"@Lazy","hide_title":true},"sidebar":"docs","previous":{"title":"@Embedded","permalink":"/docs/fundamentals/embedded"},"next":{"title":"@Primary","permalink":"/docs/fundamentals/primary"}}');var o=a(4848),r=a(8453);a(2707),a(3632);const s={title:"@Lazy",hide_title:!0},l=void 0,i={},c=[{value:"@Lazy",id:"lazy",level:2},{value:"Lazy on <code>@Configuration</code> class",id:"lazy-on-configuration-class",level:3},{value:"Lazy on Beans",id:"lazy-on-beans",level:3},{value:"Combining @Lazy on @Configuration and Bean",id:"combining-lazy-on-configuration-and-bean",level:3}];function u(e){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"lazy",children:"@Lazy"}),"\n",(0,o.jsx)(n.p,{children:"Indicates whether a bean is to be lazily initialized."}),"\n",(0,o.jsx)(n.p,{children:"By default, Clawject creates all singleton beans eagerly when all configuration classes are instantiated.\nHowever, there are cases when we need to create a bean,\nnot at the context initialization, but only when the consumer of the bean needs it."}),"\n",(0,o.jsx)(n.admonition,{type:"warning",children:(0,o.jsxs)(n.p,{children:["Be careful when ",(0,o.jsx)(n.code,{children:"@Lazy"})," is applied to async beans with custom scope (e.g. ",(0,o.jsx)(n.code,{children:"request"}),"),\nit may cause that promise will be injected instead of actual value."]})}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Bean"})," level annotations have precedence over class level annotations."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"@Lazy"})," can be applied to ",(0,o.jsx)(n.code,{children:"@Configuration"})," class or to the bean declaration."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"@Lazy"})," decorator accepts optional boolean parameter that indicates is target will be lazy or not, so to make it eager, you can use ",(0,o.jsx)(n.code,{children:"@Lazy(false)"}),"."]}),"\n"]})}),"\n",(0,o.jsxs)(n.h3,{id:"lazy-on-configuration-class",children:["Lazy on ",(0,o.jsx)(n.code,{children:"@Configuration"})," class"]}),"\n",(0,o.jsxs)(n.p,{children:["When we put ",(0,o.jsx)(n.code,{children:"@Lazy"})," decorator on the ",(0,o.jsx)(n.code,{children:"@Configuration"})," class,\nit indicates that all the beans that are declared in configuration should be loaded lazily."]}),"\n",(0,o.jsx)(n.p,{children:"Let's have a look here:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"import {Bean, ClawjectApplication, ClawjectFactory, ExposeBeans, Lazy, PostConstruct} from '@clawject/di';\n\nclass Foo {\n  @PostConstruct\n  postConstruct() {\n    console.log('Foo bean has been created');\n  }\n}\n\nclass Bar {\n  @PostConstruct\n  postConstruct() {\n    console.log('Bar bean has been created');\n  }\n}\n\n@ClawjectApplication\n@Lazy\nclass Application {\n  foo = Bean(Foo);\n  bar = Bean(Bar);\n\n  exposed = ExposeBeans<{ foo: Foo, bar: Bar }>();\n}\n\nconst applicationContext = await ClawjectFactory.createApplicationContext(Application);\nconst foo = await applicationContext.getExposedBean('foo');\n// logs: Foo bean has been created\nconst bar = await applicationContext.getExposedBean('bar');\n// logs: Bar bean has been created\n"})}),"\n",(0,o.jsx)(n.p,{children:"As we see, all beans are created only when we request them for the first time."}),"\n",(0,o.jsx)(n.h3,{id:"lazy-on-beans",children:"Lazy on Beans"}),"\n",(0,o.jsxs)(n.p,{children:["We can also put ",(0,o.jsx)(n.code,{children:"@Lazy"})," decorator over the bean declaration."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"import { Bean, ClawjectApplication, ClawjectFactory, ExposeBeans, Lazy, PostConstruct } from '@clawject/di';\n\nclass Foo {\n  @PostConstruct\n  postConstruct() {\n    console.log('Foo bean has been created');\n  }\n}\n\n@ClawjectApplication\nclass Application {\n  @Lazy foo = Bean(Foo);\n\n  exposed = ExposeBeans<{ foo: Foo }>();\n}\n\nconst applicationContext = await ClawjectFactory.createApplicationContext(Application);\nawait applicationContext.getExposedBean('foo');\n// logs: Foo bean has been created\n"})}),"\n",(0,o.jsx)(n.h3,{id:"combining-lazy-on-configuration-and-bean",children:"Combining @Lazy on @Configuration and Bean"}),"\n",(0,o.jsxs)(n.p,{children:["You can safely combine ",(0,o.jsx)(n.code,{children:"@Lazy"})," on ",(0,o.jsx)(n.code,{children:"@Configuration"})," and on the bean level."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"import { Bean, ClawjectApplication, ClawjectFactory, ExposeBeans, Lazy, PostConstruct } from '@clawject/di';\n\nclass Foo {\n  @PostConstruct\n  postConstruct() {\n    console.log('Foo bean has been created');\n  }\n}\nclass Bar {\n  @PostConstruct\n  postConstruct() {\n    console.log('Bar bean has been created');\n  }\n}\n\n@ClawjectApplication\n@Lazy\nclass Application {\n  @Lazy(false) foo = Bean(Foo);\n  bar = Bean(Bar);\n\n  exposed = ExposeBeans<{ bar: Bar }>();\n}\n\nconst applicationContext = await ClawjectFactory.createApplicationContext(Application);\n// logs: Foo bean has been created\nawait applicationContext.getExposedBean('bar');\n// logs: Foo bean has been created\n"})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>l});var t=a(6540);const o={},r=t.createContext(o);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);