name: Release @clawject/di package

on:
  push:
    paths:
      - 'packages/clawject/src/**' # Trigger deploy on dir change
      - 'packages/clawject/package.json' # Trigger deploy on file change
      - 'packages/clawject/yarn.lock' # Trigger deploy on file change
    branches:
      - main
  workflow_dispatch: # Trigger deploy manually
    branches:
      - main

defaults:
  run:
    working-directory: ./packages/clawject

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    steps:
      - name: Set git to use LF
        working-directory: ./
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: yarn npm audit signatures

      - name: Install root dependencies
        run: cd ../../ && yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint

      - name: Build
        run: yarn build

      - name: Test
        run: yarn test

  release:
    needs:
      - build
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.CLAWJECT_DI_RELEASE }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
