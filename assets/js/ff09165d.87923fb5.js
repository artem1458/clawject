"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[905],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>C});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,C=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(C,i(i({ref:t},p),{},{components:n})):r.createElement(C,i({ref:t},p))}));function C(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},542:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={title:"Errors",description:"Compile-time and runtime errors."},i=void 0,l={unversionedId:"errors",id:"errors",title:"Errors",description:"Compile-time and runtime errors.",source:"@site/docs/06-errors.mdx",sourceDirName:".",slug:"/errors",permalink:"/docs/errors",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"Errors",description:"Compile-time and runtime errors."},sidebar:"tutorialSidebar",previous:{title:"Custom Scopes",permalink:"/docs/advanced-concepts/custom-scopes"}},s={},c=[{value:"Compile-time errors",id:"compile-time-errors",level:2},{value:"CT1: IncorrectNameError",id:"ct1-incorrectnameerror",level:3},{value:"CT2: DecoratorsCountError",id:"ct2-decoratorscounterror",level:3},{value:"CT3: TypeQualifyError",id:"ct3-typequalifyerror",level:3},{value:"CT4: CanNotRegisterBeanError",id:"ct4-cannotregisterbeanerror",level:3},{value:"CT5: BeanCandidateNotFoundError",id:"ct5-beancandidatenotfounderror",level:3},{value:"CT6: MissingInitializerError",id:"ct6-missinginitializererror",level:3},{value:"CT7: CircularDependenciesError",id:"ct7-circulardependencieserror",level:3},{value:"CT8: IncorrectTypeError",id:"ct8-incorrecttypeerror",level:3},{value:"CT9: IncorrectArgumentsLengthError",id:"ct9-incorrectargumentslengtherror",level:3},{value:"CT10: DependencyResolvingError",id:"ct10-dependencyresolvingerror",level:3},{value:"CT11: NotSupportedError",id:"ct11-notsupportederror",level:3},{value:"CT12: MissingBeansDeclaration",id:"ct12-missingbeansdeclaration",level:3},{value:"CT13: TypeMismatchError",id:"ct13-typemismatcherror",level:3},{value:"CT14: DuplicateNameError",id:"ct14-duplicatenameerror",level:3},{value:"CT15: NotStaticallyKnownError",id:"ct15-notstaticallyknownerror",level:3},{value:"Runtime errors",id:"runtime-errors",level:2},{value:"NoInitializedContextFoundError",id:"noinitializedcontextfounderror",level:3},{value:"BeanNotFoundError",id:"beannotfounderror",level:3},{value:"ClassNotInheritorOfCatContextError",id:"classnotinheritorofcatcontexterror",level:3},{value:"UsageWithoutConfiguredDIError",id:"usagewithoutconfigureddierror",level:3},{value:"IllegalAccessError",id:"illegalaccesserror",level:3},{value:"DuplicateScopeError",id:"duplicatescopeerror",level:3},{value:"ScopeIsNotRegisteredError",id:"scopeisnotregisterederror",level:3},{value:"PrimitiveCouldNotBeWrappedInProxyError",id:"primitivecouldnotbewrappedinproxyerror",level:3}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Clawject produces few types of errors compile-time and runtime."),(0,a.kt)("h2",{id:"compile-time-errors"},"Compile-time errors"),(0,a.kt)("p",null,"Each compile time error has own code that can be used to identify it.\nEach code is unique and consists of prefix ",(0,a.kt)("inlineCode",{parentName:"p"},"CT")," and number.\nExample: ",(0,a.kt)("inlineCode",{parentName:"p"},"CT17"),"."),(0,a.kt)("h3",{id:"ct1-incorrectnameerror"},"CT1: IncorrectNameError"),(0,a.kt)("p",null,"It occurs when the name of the element is not met some requirements:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The name is empty"),(0,a.kt)("li",{parentName:"ul"},"The name of class member name is reserved by Clawject, for example: ",(0,a.kt)("inlineCode",{parentName:"li"},"clawject_context_metadata"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"clawject_context_type"),", etc.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Solution:")," Rename the element."),(0,a.kt)("h3",{id:"ct2-decoratorscounterror"},"CT2: DecoratorsCountError"),(0,a.kt)("p",null,"It occurs when the element has more than one same decorator.\nExample:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"class MyContext extends CatContext {\n  @Bean\n  @Bean\n  cat = new Cat();\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Solution:")," Remove extra decorators."),(0,a.kt)("h3",{id:"ct3-typequalifyerror"},"CT3: TypeQualifyError"),(0,a.kt)("p",null,"It occurs when Clawject can't qualify a type of element or return type of method or function."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Solution:")," Specify the type of element explicitly."),(0,a.kt)("h3",{id:"ct4-cannotregisterbeanerror"},"CT4: CanNotRegisterBeanError"),(0,a.kt)("p",null,"It occurs when the element can't be registered as a bean because some of the bean dependencies could not be resolved.\nThis error appears directly on bean declaration in ",(0,a.kt)("inlineCode",{parentName:"p"},"CatContext")," classes."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Solution:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Define missing dependencies in the context."),(0,a.kt)("li",{parentName:"ul"},"Check a topic about ",(0,a.kt)("a",{parentName:"li",href:"/docs/base-concepts/bean/bean-dependencies#how-dependencies-are-resolved"},"how dependencies are resolved")),(0,a.kt)("li",{parentName:"ul"},"If more than one matching dependency is defined - rename parameter to match one of the resolved dependencies by name."),(0,a.kt)("li",{parentName:"ul"},"Specify primary bean for the dependency with ",(0,a.kt)("a",{parentName:"li",href:"/docs/base-concepts/primary"},(0,a.kt)("inlineCode",{parentName:"a"},"@Primary"))," decorator.")),(0,a.kt)("h3",{id:"ct5-beancandidatenotfounderror"},"CT5: BeanCandidateNotFoundError"),(0,a.kt)("p",null,"It occurs when the bean candidate for the specific dependency could not be resolved."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"When declaring bean with ",(0,a.kt)("a",{parentName:"li",href:"/docs/base-concepts/bean/declare-bean#using-bean-decorator"},"@Bean decorator")," - error will\nappear on the corresponding parameter of the ",(0,a.kt)("strong",{parentName:"li"},"factory-function"),"."),(0,a.kt)("li",{parentName:"ul"},"When declaring bean with ",(0,a.kt)("a",{parentName:"li",href:"/docs/base-concepts/bean/declare-bean#using-bean-function"},"Bean function")," - error will\nappear on the corresponding parameter of the ",(0,a.kt)("strong",{parentName:"li"},"class constructor"),".\nAlso - if you have more than one matching candidate for injection - Clawject will notify you which candidate is matching by name and type.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Solution:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Define missing dependencies in the context."),(0,a.kt)("li",{parentName:"ul"},"Check a topic about ",(0,a.kt)("a",{parentName:"li",href:"/docs/base-concepts/bean/bean-dependencies#how-dependencies-are-resolved"},"how dependencies are resolved")),(0,a.kt)("li",{parentName:"ul"},"If more than one matching dependency is defined - rename parameter to match one of the resolved dependencies by name."),(0,a.kt)("li",{parentName:"ul"},"Specify primary bean for the dependency with ",(0,a.kt)("a",{parentName:"li",href:"/docs/base-concepts/primary"},(0,a.kt)("inlineCode",{parentName:"a"},"@Primary"))," decorator.")),(0,a.kt)("h3",{id:"ct6-missinginitializererror"},"CT6: MissingInitializerError"),(0,a.kt)("p",null,"It occurs when a property or method that is registered as a bean or lifecycle hook does not have an initializer.\nExample:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"class MyContext extends CatContext {\n  @Bean cat: Cat;\n  @PostConstruct postConstruct(): void;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Solution:")," Add initializer to the property or method."),(0,a.kt)("h3",{id:"ct7-circulardependencieserror"},"CT7: CircularDependenciesError"),(0,a.kt)("p",null,"It occurs when some beans have circular dependencies between each other.\nA circular dependency occurs when a bean A depends on another bean B, and the bean B depends on bean A as well:",(0,a.kt)("br",null),"\nBean A \u2192 Bean B \u2192 Bean A"),(0,a.kt)("p",null,"Of course, we could have more beans implied:",(0,a.kt)("br",null),"\nBean A \u2192 Bean B \u2192 Bean C \u2192 Bean D \u2192 Bean E \u2192 Bean A"),(0,a.kt)("p",null,"Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"class A {\n  constructor(b: B) {}\n}\nclass B {\n  constructor(a: A) {}\n}\nclass MyContext extends CatContext {\n  //Error here\n  @Bean A(b: B): A {\n    return new A(b);\n  }\n  @Bean B(a: A): B {\n    return new B(a);\n  }\n}\n")),(0,a.kt)("p",null,"Clawject will detect circular dependencies at compile-time and report this error in a readable way."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Solution:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Redesign. When we have a circular dependency, it\u2019s likely we have a design problem and that the responsibilities are not well separated.\nWe should try to redesign the components properly so that their hierarchy is well-designed, and there is no need for circular dependencies.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"If we can\u2019t redesign the components, we can assign the instance after creation.\nIt's not the best way, but it works.\nNote that field ",(0,a.kt)("inlineCode",{parentName:"p"},"b")," in ",(0,a.kt)("inlineCode",{parentName:"p"},"A")," will be available only after the creation of the bean ",(0,a.kt)("inlineCode",{parentName:"p"},"B"),".\nExample:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"class A {\n  declare public b: B;\n}\nclass B {\n  constructor(a: A) {}\n}\nclass MyContext extends CatContext {\n  @Bean A(): A {\n    return new A();\n  }\n  @Bean B(a: A): B {\n    const instance = new B(a);\n    a.b = instance;\n\n    return instance;\n  }\n}\n")))),(0,a.kt)("h3",{id:"ct8-incorrecttypeerror"},"CT8: IncorrectTypeError"),(0,a.kt)("p",null,"It occurs when the type of the bean is not supported by Clawject, here defined restricted ",(0,a.kt)("a",{parentName:"p",href:"/docs/base-concepts/bean/bean-type"},"Bean types"),". Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"class MyContext extends CatContext {\n  @Bean stringOrNumber(): string | number {\n    return 'Masya';\n  }\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Solution:")," Use only supported types or wrap an unsupported type in the object. Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"class Value<T> {\n  constructor(public value: T) {}\n}\nclass MyContext extends CatContext {\n  @Bean stringOrNumber(): Value<string | number> {\n    return new Value('Masya');\n  }\n}\n")),(0,a.kt)("h3",{id:"ct9-incorrectargumentslengtherror"},"CT9: IncorrectArgumentsLengthError"),(0,a.kt)("p",null,"It occurs when required arguments count not match requirements. Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"class MyContext extends CatContext {\n  @Qualifier() cat = Bean(Cat)\n}\n")),(0,a.kt)("p",null,"In this example - ",(0,a.kt)("inlineCode",{parentName:"p"},"@Qualifier")," decorator requires exactly one argument to be passed, but it was not provided, so Clawject will report error."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Solution:")," Pass required arguments count."),(0,a.kt)("h3",{id:"ct10-dependencyresolvingerror"},"CT10: DependencyResolvingError"),(0,a.kt)("p",null,"It occurs when the dependencies of class constructor could not be resolved. This error occurs only when using ",(0,a.kt)("a",{parentName:"p",href:"/docs/base-concepts/bean/declare-bean#using-bean-function"},"Bean function"),". Examples:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Didn't pass class to the ",(0,a.kt)("strong",{parentName:"li"},"Bean function"),":",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"class MyContext extends CatContext {\n  @Bean cat = Bean();\n}\n"))),(0,a.kt)("li",{parentName:"ul"},"More than one or no class declaration found, ",(0,a.kt)("inlineCode",{parentName:"li"},"Dog")," class is declared, but ",(0,a.kt)("inlineCode",{parentName:"li"},"Cat")," is not:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"class Dog {}\nclass MyContext extends CatContext {\n  @Bean cat = Bean(Cat);\n  @Bean dog = Bean(Dog);\n}\n")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Solution:")," Use ",(0,a.kt)("strong",{parentName:"p"},"factory-method")," with ",(0,a.kt)("a",{parentName:"p",href:"/docs/base-concepts/bean/declare-bean#using-bean-decorator"},"@Bean decorator"),"\ninstead of ",(0,a.kt)("strong",{parentName:"p"},"Bean function"),"."),(0,a.kt)("h3",{id:"ct11-notsupportederror"},"CT11: NotSupportedError"),(0,a.kt)("p",null,"It occurs when some feature is not supported by Clawject. Example:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Using ",(0,a.kt)("inlineCode",{parentName:"li"},"@PostConstruct")," decorator on method with arguments outside CatContext class:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"class Cat {\n  @PostConstruct\n  meow(data: any): void {}\n}\n"))),(0,a.kt)("li",{parentName:"ul"},"Using ",(0,a.kt)("inlineCode",{parentName:"li"},"@Embedded")," decorator with bean declared with ",(0,a.kt)("a",{parentName:"li",href:"/docs/base-concepts/bean/declare-bean#using-bean-function"},"Bean function"),":",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"class MyContext extends CatContext {\n  @Embedded cat = Bean(Cat);\n}\n"))),(0,a.kt)("li",{parentName:"ul"},"Unsupported class members modifiers:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"class MyContext extends CatContext {\n  static cat1 = Bean(Cat);\n  abstract cat2 = Bean(Cat);\n  @Bean declare cat3: Cat;\n  private cat4 = Bean(Cat);\n}\n"))),(0,a.kt)("li",{parentName:"ul"},"Using decorators in inappropriate places, for example ",(0,a.kt)("inlineCode",{parentName:"li"},"@Bean")," decorator in not CatContext class:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"class Dog {}\nclass Cat {\n  @Bean\n  dog(): Dog {}\n}\n"))),(0,a.kt)("li",{parentName:"ul"},"Inappropriate decorators combination:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"@Bean @Embedded\nclass MyContext extends CatContext {\n  @Bean @PostConstruct cat = Bean(Cat);\n}\n"))),(0,a.kt)("li",{parentName:"ul"},"Inappropriate decorator target:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"@Bean\nclass MyContext extends CatContext {}\n")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Solution:")," Do not use unsupported features."),(0,a.kt)("h3",{id:"ct12-missingbeansdeclaration"},"CT12: MissingBeansDeclaration"),(0,a.kt)("p",null,"It occurs when the context does not have required beans that are declared in CatContext interface. Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"interface IMyContext {\n  cat: Cat;\n  dog: Dog;\n}\nclass MyContext extends CatContext<IMyContext> {\n  cat = Bean(Cat);\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Solution:")," Declare missing beans in the context."),(0,a.kt)("h3",{id:"ct13-typemismatcherror"},"CT13: TypeMismatchError"),(0,a.kt)("p",null,"It occurs when the type of Bean is not compatible with a type declared in CatContext interface. Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"interface IMyContext {\n  cat: Dog;\n}\nclass MyContext extends CatContext<IMyContext> {\n  cat = Bean(Cat);\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Solution:")," Change the type of Bean to match the type declared in CatContext interface or vice versa."),(0,a.kt)("h3",{id:"ct14-duplicatenameerror"},"CT14: DuplicateNameError"),(0,a.kt)("p",null,"It occurs when few beans have the same name (class member name or name defined via ",(0,a.kt)("a",{parentName:"p",href:"/docs/base-concepts/qualifier"},(0,a.kt)("inlineCode",{parentName:"a"},"@Qualifier decorator")),"). Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"class MyContext extends CatContext {\n  cat = Bean(Cat);\n  @Qualifier('cat') dog = Bean(Dog);\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Solution:")," Change the name of one of the beans."),(0,a.kt)("h3",{id:"ct15-notstaticallyknownerror"},"CT15: NotStaticallyKnownError"),(0,a.kt)("p",null,"It occurs when value or name in some part of code is not statically known. Example:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The name of element is computed or uniq Symbol:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const BeanName = 'MasyaCat';\nconst UniqSymbol = Symbol.for('MasyaCat');\nclass MyContext extends CatContext {\n  ['Masya' + 'Cat'] = Bean(Cat);\n  [BeanName] = Bean(Cat);\n  [UniqSymbol] = Bean(Cat);\n}\n"))),(0,a.kt)("li",{parentName:"ul"},"Arguments on some decorators are computed:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"class MyContext extends CatContext {\n  @Qualifier('Masya' + 'Cat') cat = Bean(Cat);\n}\n")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Solution:")," Use only statically known values and names when it's required."),(0,a.kt)("h2",{id:"runtime-errors"},"Runtime errors"),(0,a.kt)("p",null,"Runtime errors are regular JavaScript errors that can be thrown during the application execution.\nClawject exporting Error classes that can be caught and handled in the application code.\nEach error has ",(0,a.kt)("inlineCode",{parentName:"p"},"name")," property, so it can be identified via name or via ",(0,a.kt)("inlineCode",{parentName:"p"},"instanceof")," operator."),(0,a.kt)("h3",{id:"noinitializedcontextfounderror"},"NoInitializedContextFoundError"),(0,a.kt)("p",null,"It occurs when the context is not initialized, and you're trying\nto get ",(0,a.kt)("a",{parentName:"p",href:"/docs/base-concepts/initialized-context"},(0,a.kt)("inlineCode",{parentName:"a"},"InitializedContext"))," object\nfrom ",(0,a.kt)("a",{parentName:"p",href:"/docs/base-concepts/container-manager"},(0,a.kt)("inlineCode",{parentName:"a"},"ContainerManager")),".\nExample:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"class MyContext extends CatContext {}\nContainerManager.get(MyContext);\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Solution:")," Initialize the context before getting it from the container manager."),(0,a.kt)("h3",{id:"beannotfounderror"},"BeanNotFoundError"),(0,a.kt)("p",null,"It occurs when the bean that is requested is not found in the context. Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"interface IMyContext {\n  cat: Cat;\n}\nclass MyContext extends CatContext<IMyContext> {\n  cat = Bean(Cat);\n}\nconst initializedContext = ContainerManager.init(MyContext);\n\ninitializedContext.getBean('dog');\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Solution:")," Define missing bean in the context."),(0,a.kt)("h3",{id:"classnotinheritorofcatcontexterror"},"ClassNotInheritorOfCatContextError"),(0,a.kt)("p",null,"It occurs when you're trying to initialize the context that is not inherited from CatContext. Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"class MyContext {}\nContainerManager.init(MyContext);\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Solution:")," Inherit context from CatContext."),(0,a.kt)("h3",{id:"usagewithoutconfigureddierror"},"UsageWithoutConfiguredDIError"),(0,a.kt)("p",null,"It occurs when you're trying to use Clawject without proper configuration,\nfor example - you're forgotten to add Clawject transformer to the tsconfig.json file."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Solution:")," Configure Clawject properly."),(0,a.kt)("h3",{id:"illegalaccesserror"},"IllegalAccessError"),(0,a.kt)("p",null,"It occurs when you're trying to access some internal clawject property or method that is not allowed to access."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Solution:")," Do not access internal clawject properties and methods."),(0,a.kt)("h3",{id:"duplicatescopeerror"},"DuplicateScopeError"),(0,a.kt)("p",null,"It occurs when you're trying to register the scope that is already registered. Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"class MyCustomScope implements CustomScope {\n  //...\n}\nContainerManager.registerScope('myCustomScope', new MyCustomScope());\nContainerManager.registerScope('myCustomScope', new MyCustomScope());\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Solution:")," Register only one scope with the same name."),(0,a.kt)("h3",{id:"scopeisnotregisterederror"},"ScopeIsNotRegisteredError"),(0,a.kt)("p",null,"It occurs when you're trying to assign non-registered scope to the bean. Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"class MyContext extends CatContext {\n  @Scope('MySuperScopeThatIsNotRegistered') cat = Bean(Cat);\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Solution:")," Register scope before using it."),(0,a.kt)("h3",{id:"primitivecouldnotbewrappedinproxyerror"},"PrimitiveCouldNotBeWrappedInProxyError"),(0,a.kt)("p",null,"It occurs when your scope implementation defines ",(0,a.kt)("inlineCode",{parentName:"p"},"useProxy")," method that is returned ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),", and bean that is returned primitive value\nwas decorated with this scope.\nJavaScript does not allow wrapping primitive values in proxy, so this error will be thrown. Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"class MyCustomScope implements CustomScope {\n  useProxy(): boolean {\n    return true;\n  }\n  //...\n}\nclass MyContext extends CatContext {\n  @Scope('MyCustomScope') cat = Bean(Cat);\n}\nContainerManager.registerScope('MyCustomScope', new MyCustomScope());\nContainerManager.init(MyContext);\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Solution:")," Do not return primitive values from beans that are decorated with scope that defines ",(0,a.kt)("inlineCode",{parentName:"p"},"useProxy")," method that is returned ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),"."))}d.isMDXComponent=!0}}]);