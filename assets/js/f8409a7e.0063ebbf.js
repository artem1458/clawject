"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[206],{9325:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var o=n(5893),a=n(1151);const r={title:"Introduction",slug:"/"},i=void 0,c={id:"intro",title:"Introduction",description:"Clawject is TypeScript Dependency Injection framework that's here to make your coding life a breeze.",source:"@site/docs/intro.mdx",sourceDirName:".",slug:"/",permalink:"/docs/",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1700927656,formattedLastUpdatedAt:"Nov 25, 2023",frontMatter:{title:"Introduction",slug:"/"},sidebar:"docs",next:{title:"Setup \ud83d\udee0\ufe0f",permalink:"/docs/setup"}},s={},l=[];function d(e){const t={code:"code",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"Clawject is TypeScript Dependency Injection framework that's here to make your coding life a breeze.\nNo more wrestling with injection tokens and drowning in boilerplate code.\nWith Clawject, you can simply focus on writing clean classes, defining interfaces, and managing types,\nwhile the framework takes care of the rest.\nSay goodbye to the headaches and hello to a smoother TypeScript development journey with Clawject!\n\ud83c\udf89"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",metastring:'title="main.ts"',children:"import { Bean, CatContext } from '@clawject/di';\n\ninterface IFoo {}\nclass Foo implements IFoo { /* ... */ }\n\nclass Bar {\n  constructor(\n    private foo: IFoo // <-- Clawject will automatically inject implementation of IFoo interface\n  ) {}\n}\n\nclass ApplicationContext extends CatContext {\n  fooBean = Bean(Foo);\n  barBean = Bean(Bar);\n}\n"})})]})}function p(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>c,a:()=>i});var o=n(7294);const a={},r=o.createContext(a);function i(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);