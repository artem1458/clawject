"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3594],{6262:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>d});var t=o(4848),a=o(8453),s=o(1470),r=o(9365);const c={title:"@Scope",hide_title:!0},l=void 0,i={id:"fundamentals/scope",title:"@Scope",description:"@Scope",source:"@site/docs/fundamentals/scope.mdx",sourceDirName:"fundamentals",slug:"/fundamentals/scope",permalink:"/docs/fundamentals/scope",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1721804263e3,frontMatter:{title:"@Scope",hide_title:!0},sidebar:"docs",previous:{title:"@Qualifier",permalink:"/docs/fundamentals/qualifier"},next:{title:"ScopeRegister",permalink:"/docs/fundamentals/scope-register"}},u={},d=[{value:"@Scope",id:"scope",level:2},{value:"Singleton scope <em>(default)</em>",id:"singleton-scope-default",level:3},{value:"Transient scope",id:"transient-scope",level:3},{value:"Scope on @Configuration class",id:"scope-on-configuration-class",level:3},{value:"Scope on Beans",id:"scope-on-beans",level:3},{value:"Combining @Scope on @Configuration and Bean",id:"combining-scope-on-configuration-and-bean",level:3}];function p(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"scope",children:"@Scope"}),"\n",(0,t.jsx)(n.p,{children:"The Scope of Bean is a way to define when Bean will be created and how it is managed by container."}),"\n",(0,t.jsxs)(n.p,{children:["Clawject provides ",(0,t.jsx)(n.code,{children:"@Scope"})," decorator to define a scope and have 3 built-in scopes:\n",(0,t.jsx)(n.code,{children:"singleton"})," and ",(0,t.jsx)(n.code,{children:"transient"}),", default value is ",(0,t.jsx)(n.code,{children:"singleton"}),"."]}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["If you wish to implement your own scope, you can do it by implementing ",(0,t.jsx)(n.code,{children:"Scope"})," interface.\nRead more about it in ",(0,t.jsx)(n.a,{href:"/docs/guides/creating-scope",children:"Creating Scope"})," section."]})}),"\n",(0,t.jsxs)(n.h3,{id:"singleton-scope-default",children:["Singleton scope ",(0,t.jsx)(n.em,{children:"(default)"})]}),"\n",(0,t.jsx)(n.p,{children:"When you define a bean with the singleton scope, the container creates a single instance of that bean,\nall requests for that bean will return the same object, which is cached.\nAny modifications to the object will be reflected in all references to the bean.\nThis scope is the default value if no other scope is specified."}),"\n",(0,t.jsxs)(s.A,{children:[(0,t.jsx)(r.A,{value:"implicit-scope",label:"Declare a Bean with default singleton scope",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'class Foo {\n  name = \'foo\';\n}\n\nclass Bar {\n  constructor(public foo: Foo) {}\n\n  setName(): void {\n    this.foo.name = \'bar\';\n  }\n}\n\nclass Baz {\n  constructor(public foo: Foo) {}\n}\n\n@ClawjectApplication\nclass Application {\n  foo = Bean(Foo);\n\n  bar = Bean(Bar);\n  baz = Bean(Baz);\n\n  @PostConstruct\n  postConstruct(\n    bar: Bar,\n    baz: Baz,\n  ) {\n    bar.setName();\n\n    console.log(bar.foo === baz.foo); // <- prints "true"\n\n    console.log(bar.foo.property); // <- prints "bar"\n    console.log(baz.foo.property); // <- prints "bar"\n  }\n}\n'})})}),(0,t.jsx)(r.A,{value:"explicit-scope",label:"Declare Scope of Bean using decorator",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'class Foo {\n  name = \'foo\';\n}\n\nclass Bar {\n  constructor(public foo: Foo) {}\n\n  setName(): void {\n    this.foo.name = \'bar\';\n  }\n}\n\nclass Baz {\n  constructor(public foo: Foo) {}\n}\n\n@ClawjectApplication\nclass Application {\n  @Scope("singleton")\n  foo = Bean(Foo);\n\n  bar = Bean(Bar);\n  baz = Bean(Baz);\n\n  @PostConstruct\n  postConstruct(\n    bar: Bar,\n    baz: Baz,\n  ) {\n    bar.setName();\n\n    console.log(bar.foo === baz.foo); // <- prints "true"\n\n    console.log(bar.foo.property); // <- prints "bar"\n    console.log(baz.foo.property); // <- prints "bar"\n  }\n}\n'})})})]}),"\n",(0,t.jsx)(n.h3,{id:"transient-scope",children:"Transient scope"}),"\n",(0,t.jsxs)(n.p,{children:["A Bean with the ",(0,t.jsx)(n.code,{children:"transient"})," scope will return a different instance every time it is requested from the container."]}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["Methods decorated with @PreDestroy will not be called for beans with ",(0,t.jsx)(n.code,{children:"transient"})," scope."]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'class Foo {\n  name = \'foo\';\n}\n\nclass Bar {\n  constructor(public foo: Foo) {}\n\n  setName(): void {\n    this.foo.name = \'bar\';\n  }\n}\n\nclass Baz {\n  constructor(public foo: Foo) {}\n}\n\n@ClawjectApplication\nclass Application {\n  @Scope("transient")\n  foo = Bean(Foo);\n\n  bar = Bean(Bar);\n  baz = Bean(Baz);\n\n  @PostConstruct\n  postConstruct(\n    bar: Bar,\n    baz: Baz,\n  ) {\n    bar.setName();\n\n    console.log(bar.foo === baz.foo); // <- prints "false"\n\n    console.log(bar.foo.property); // <- prints "bar"\n    console.log(baz.foo.property); // <- prints "foo"\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"scope-on-configuration-class",children:"Scope on @Configuration class"}),"\n",(0,t.jsxs)(n.p,{children:["When you put ",(0,t.jsx)(n.code,{children:"@Scope"})," decorator over the ",(0,t.jsx)(n.code,{children:"@Configuration"})," or ",(0,t.jsx)(n.code,{children:"@ClawjectApplication"})," class,\nit indicates that all the beans that are declared in context should have scope defined in decorator."]}),"\n",(0,t.jsx)(n.p,{children:"Let's have a look here:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"class Foo {\n  constructor() {\n    console.log('Foo has been created');\n  }\n}\n\n@ClawjectApplication\n@Scope('transient')\nclass Application {\n  foo = Bean(Foo);\n\n  @PostConstruct\n  postConstruct(\n    foo1: Foo, // <- logs \"Foo has been created\"\n    foo2: Foo, // <- logs \"Foo has been created\",\n  ) {}\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["As we see, ",(0,t.jsx)(n.code,{children:"foo"})," bean will be created twice,\nbecause it's requested 2 times and it inherits ",(0,t.jsx)(n.code,{children:"transient"})," scope from context."]}),"\n",(0,t.jsx)(n.h3,{id:"scope-on-beans",children:"Scope on Beans"}),"\n",(0,t.jsxs)(n.p,{children:["We can also put ",(0,t.jsx)(n.code,{children:"@Scope"})," decorator over the bean declaration."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"class Foo {\n  @PostConstruct\n  postConstruct() {\n    console.log('Foo bean has been created');\n  }\n}\n\n@ClawjectApplication\nclass Application {\n  @Scope('transient') foo = Bean(Foo);\n\n  @PostConstruct\n  postConstruct(\n    foo1: Foo, // <- logs \"Foo bean has been created\"\n    foo2: Foo, // <- logs \"Foo bean has been created\",\n  ) {}\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["As you can see - we've defined scope on ",(0,t.jsx)(n.code,{children:"foo"})," bean, and foo was instantiated ",(0,t.jsx)(n.strong,{children:"two"})," times."]}),"\n",(0,t.jsx)(n.h3,{id:"combining-scope-on-configuration-and-bean",children:"Combining @Scope on @Configuration and Bean"}),"\n",(0,t.jsxs)(n.p,{children:["We can also combine ",(0,t.jsx)(n.code,{children:"@Scope"})," decorator ",(0,t.jsx)(n.code,{children:"@Configuration"})," and ",(0,t.jsx)(n.code,{children:"Bean"}),".\nIf Bean is decorated with ",(0,t.jsx)(n.code,{children:"@Scope"}),", it overrides the ",(0,t.jsx)(n.code,{children:"@Scope"})," on ",(0,t.jsx)(n.code,{children:"@Configuration"})," level for this bean,\nif not - value from ",(0,t.jsx)(n.code,{children:"@Configuration"})," is used."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"class Foo {\n  @PostConstruct\n  postConstruct() {\n    console.log('Foo bean has been created');\n  }\n}\nclass Bar {\n  @PostConstruct\n  postConstruct() {\n    console.log('Bar bean has been created');\n  }\n}\n\n@ClawjectApplication\n@Scope('transient')\nclass Application {\n    foo = Bean(Foo);\n    @Scope('singleton') bar = Bean(Bar);\n\n    @PostConstruct\n    postConstruct(\n      foo1: Foo, // <- logs \"Foo bean has been created\"\n      foo2: Foo, // <- logs \"Foo bean has been created\",\n      bar1: Bar, // <- logs \"Bar bean has been created\"\n      bar2: Bar, // <- logs nothing, because Bar is a singleton\n    ) {}\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},9365:(e,n,o)=>{o.d(n,{A:()=>r});o(6540);var t=o(4164);const a={tabItem:"tabItem_Ymn6"};var s=o(4848);function r(e){let{children:n,hidden:o,className:r}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.A)(a.tabItem,r),hidden:o,children:n})}},1470:(e,n,o)=>{o.d(n,{A:()=>B});var t=o(6540),a=o(4164),s=o(3104),r=o(6347),c=o(205),l=o(7485),i=o(1682),u=o(679);function d(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:o}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:o,attributes:t,default:a}}=e;return{value:n,label:o,attributes:t,default:a}}))}(o);return function(e){const n=(0,i.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,o])}function h(e){let{value:n,tabValues:o}=e;return o.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:o}=e;const a=(0,r.W6)(),s=function(e){let{queryString:n=!1,groupId:o}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!o)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return o??null}({queryString:n,groupId:o});return[(0,l.aZ)(s),(0,t.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(a.location.search);n.set(s,e),a.replace({...a.location,search:n.toString()})}),[s,a])]}function b(e){const{defaultValue:n,queryString:o=!1,groupId:a}=e,s=p(e),[r,l]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:o}=e;if(0===o.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:o}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${o.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=o.find((e=>e.default))??o[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:s}))),[i,d]=f({queryString:o,groupId:a}),[b,m]=function(e){let{groupId:n}=e;const o=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,s]=(0,u.Dv)(o);return[a,(0,t.useCallback)((e=>{o&&s.set(e)}),[o,s])]}({groupId:a}),g=(()=>{const e=i??b;return h({value:e,tabValues:s})?e:null})();(0,c.A)((()=>{g&&l(g)}),[g]);return{selectedValue:r,selectValue:(0,t.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),m(e)}),[d,m,s]),tabValues:s}}var m=o(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=o(4848);function j(e){let{className:n,block:o,selectedValue:t,selectValue:r,tabValues:c}=e;const l=[],{blockElementScrollPositionUntilNextRender:i}=(0,s.a_)(),u=e=>{const n=e.currentTarget,o=l.indexOf(n),a=c[o].value;a!==t&&(i(n),r(a))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const o=l.indexOf(e.currentTarget)+1;n=l[o]??l[0];break}case"ArrowLeft":{const o=l.indexOf(e.currentTarget)-1;n=l[o]??l[l.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":o},n),children:c.map((e=>{let{value:n,label:o,attributes:s}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>l.push(e),onKeyDown:d,onClick:u,...s,className:(0,a.A)("tabs__item",g.tabItem,s?.className,{"tabs__item--active":t===n}),children:o??n},n)}))})}function v(e){let{lazy:n,children:o,selectedValue:a}=e;const s=(Array.isArray(o)?o:[o]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===a));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function w(e){const n=b(e);return(0,x.jsxs)("div",{className:(0,a.A)("tabs-container",g.tabList),children:[(0,x.jsx)(j,{...n,...e}),(0,x.jsx)(v,{...n,...e})]})}function B(e){const n=(0,m.A)();return(0,x.jsx)(w,{...e,children:d(e.children)},String(n))}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>c});var t=o(6540);const a={},s=t.createContext(a);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);