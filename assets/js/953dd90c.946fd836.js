"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8746],{7335:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"core-concepts/clawject-ioc","title":"Clawject IoC Container","description":"Clawject IoC Container","source":"@site/docs/core-concepts/clawject-ioc.mdx","sourceDirName":"core-concepts","slug":"/core-concepts/clawject-ioc","permalink":"/docs/core-concepts/clawject-ioc","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"ioc","permalink":"/docs/tags/ioc"},{"inline":true,"label":"di","permalink":"/docs/tags/di"},{"inline":true,"label":"container","permalink":"/docs/tags/container"},{"inline":true,"label":"bean","permalink":"/docs/tags/bean"},{"inline":true,"label":"scope","permalink":"/docs/tags/scope"},{"inline":true,"label":"lazy","permalink":"/docs/tags/lazy"}],"version":"current","lastUpdatedAt":1730819800000,"frontMatter":{"title":"Clawject IoC Container","hide_title":true,"tags":["ioc","di","container","bean","scope","lazy"]},"sidebar":"docs","previous":{"title":"IoC and DI","permalink":"/docs/core-concepts/ioc-di-basics"},"next":{"title":"Clawject Type System","permalink":"/docs/core-concepts/type-system"}}');var c=t(4848),s=t(8453);const o={title:"Clawject IoC Container",hide_title:!0,tags:["ioc","di","container","bean","scope","lazy"]},i=void 0,r={},l=[{value:"Clawject IoC Container",id:"clawject-ioc-container",level:2},{value:"Constructor-Based Dependency Injection",id:"constructor-based-dependency-injection",level:2},{value:"Bean scopes",id:"bean-scopes",level:2},{value:"Lazy Initialized Beans",id:"lazy-initialized-beans",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"clawject-ioc-container",children:"Clawject IoC Container"}),"\n",(0,c.jsx)(n.p,{children:"An IoC container is a common characteristic of frameworks that implement IoC."}),"\n",(0,c.jsxs)(n.p,{children:["In Clawject, class defined with ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"@ClawjectApplication"})})," decorator is a representation of the single IoC container.\nThe Clawject container is responsible for instantiating, configuring and assembling objects known as Beans,\nas well as managing their life cycles."]}),"\n",(0,c.jsxs)(n.p,{children:["Right now Clawject provides one way to manage IoC containers. ",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.code,{children:"ClawjectFactory"})})," class."]}),"\n",(0,c.jsx)(n.p,{children:"Here is the way to initialize the container:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"import { ClawjectApplication, ClawjectFactory } from '@clawject/di';\n\n@ClawjectApplication\nclass Application {}\n\nconst applicationContext = await ClawjectFactory.createApplicationContext(Application)\n"})}),"\n",(0,c.jsx)(n.h2,{id:"constructor-based-dependency-injection",children:"Constructor-Based Dependency Injection"}),"\n",(0,c.jsx)(n.p,{children:"In the case of constructor-based dependency injection,\nthe container will invoke a constructor with arguments each representing a dependency that is required."}),"\n",(0,c.jsx)(n.p,{children:"Clawject resolves each argument primarily by type, followed by the name of the constructor parameter.\nLet's see the defining of a bean and its dependencies using Bean function call:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"class Bar {}\nclass Foo {\n  constructor(private bar: Bar) {}\n}\n\n@ClawjectApplication\nclass Application {\n  foo = Bean(Foo)\n  bar = Bean(Bar)\n}\n"})}),"\n",(0,c.jsx)(n.p,{children:"We're passing class constructor to the Bean function and assigning the result of function to the class property to define a bean;\nBean name is a class property name to which you assign the result of the Bean function."}),"\n",(0,c.jsx)(n.h2,{id:"bean-scopes",children:"Bean scopes"}),"\n",(0,c.jsxs)(n.p,{children:["You can read more about scopes here ",(0,c.jsx)(n.a,{href:"/docs/fundamentals/scope",children:"@Scope"}),"."]}),"\n",(0,c.jsxs)(n.p,{children:["For a bean with the default ",(0,c.jsx)(n.strong,{children:"singleton scope"}),",\nClawject first checks if instance of the bean already created,\nand only creates a new one if it doesn't.\nIf we're using the ",(0,c.jsx)(n.strong,{children:"transient scope"}),", the container returns a new bean instance for each bean request."]}),"\n",(0,c.jsxs)(n.p,{children:["Let's see how we can define a bean with the ",(0,c.jsx)(n.strong,{children:"transient"})," scope.\nNow we have two beans that require the ",(0,c.jsx)(n.strong,{children:"Baz"})," instance,\nfor each of which the container creates a new instance of a ",(0,c.jsx)(n.strong,{children:"Baz"})," class."]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"class Baz {}\nclass Bar {\n  constructor(private baz: Baz) {}\n}\nclass Foo {\n  constructor(private baz: Baz) {}\n}\n\n@ClawjectApplication\nclass Application {\n  foo = Bean(Foo)\n  bar = Bean(Bar)\n\n  @Scope('transient')\n  baz = Bean(Baz)\n}\n"})}),"\n",(0,c.jsx)(n.h2,{id:"lazy-initialized-beans",children:"Lazy Initialized Beans"}),"\n",(0,c.jsxs)(n.p,{children:["You can read more about lazy beans here ",(0,c.jsx)(n.a,{href:"/docs/fundamentals/lazy",children:"@Lazy"}),"."]}),"\n",(0,c.jsxs)(n.p,{children:["By default, the container creates and configures all singleton beans during initialization.\nTo avoid this, you can use the ",(0,c.jsx)(n.strong,{children:"@Lazy"})," decorator with on the bean configuration level:"]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"foo"})," bean will only be initialized when it's first requested, and not at startup."]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"class Foo {}\n\n@ClawjectApplication\nclass Application {\n  @Lazy\n  foo = Bean(Foo)\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var a=t(6540);const c={},s=a.createContext(c);function o(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:o(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);